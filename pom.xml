<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.terheyden</groupId>
    <artifactId>java-extensions</artifactId>
    <version>0.1.8-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>java-extensions</name>
    <description>Miscellaneous Java utility classes</description>
    <url>http://terheyden.com</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Luke Terheyden</name>
            <email>terheyden@gmail.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/terheyden/java-extensions.git</connection>
        <developerConnection>scm:git:ssh://github.com/terheyden/java-extensions.git</developerConnection>
        <url>http://github.com/terheyden/java-extensions/tree/master</url>
    </scm>

    <prerequisites>
        <maven>3.0.5</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <!-- Tell Maven to compile at Java 1.8 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- Modernizer - detect old-style code usages -->
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <exclusions>
                        <exclusion>
                            com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
                        </exclusion>
                    </exclusions>
                    <javaVersion>1.8</javaVersion>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Detect newer versions of dependencies and plugins -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>display-plugin-updates</goal>
                            <goal>display-dependency-updates</goal>
                            <goal>display-property-updates</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- detect dependency conflicts -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M1</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <dependencyConvergence>
                                    <!-- converge snapshotted versions also -->
                                    <uniqueVersions>true</uniqueVersions>
                                </dependencyConvergence>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate doc jar during package phase for Maven Central -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate source jar during package phase for Maven Central -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Sign jars for distribution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo - test coverage, to encourage devs to write unit tests -->
            <!-- If you want to have line number information included in the coverage reports
                 or you want source code highlighting the class files of the test target must be
                 compiled with debug information -->
            <!-- When using the maven-surefire-plugin or maven-failsafe-plugin you must not use
                 a forkCount of 0 or set the forkMode to never as this would prevent the execution
                 of the tests with the javaagent set and no coverage would be recorded -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <configuration>
                    <excludes>
                        <!-- Ignore specific class: **/MyClassName* -->
                        <!-- Ignore model package -->
                        <exclude>**/model/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <!-- can also: -Djacoco.skip -->
                            <skip>false</skip>
                            <haltOnFailure>true</haltOnFailure>
                            <rules>
                                <rule>
                                    <!-- BUNDLE = overall metrics, CLASS = per-class -->
                                    <!-- I choose BUNDLE because some classes don't need coverage -->
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <!-- LINE = line coverage, INSTRUCTION = overall byte instructions -->
                                            <!-- I prefer INSTRUCTION because not every line needs coverage -->
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.30</minimum>
                                        </limit>
                                        <limit>
                                            <!-- BRANCH is specifically if..then..else tree coverage -->
                                            <!-- Branches usually indicate logic, so they have a separate count -->
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.30</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- @NotNull, @Nullable -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>15.0</version>
        </dependency>
        <!-- @ParametersAreNonNullByDefault -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
